(load "tests/test_driver1.scm")
(define foo (lambda (n) (* n n)))
foo
(map foo (quote (1 2 3)))
(define (bar n) n)
(map bar (quote (1 2 3)))
(load "tests/test_driver1.scm")
(transcript-on "foo.txt")
(*symbols*)
(transcript-off)
(transcript-on "foo.txt")
(trancript-off)
(transcript-off)
(transcript-on "foo.txt")
(*symbols*)
(transcript-off)
(transcript-on "foo.txt")
(*symbols*)
(transcript-off)
(transcript-on "foo.txt")
(define (fact n) (if (<= n 1) 1 (* n (fact (- n 1)))))
fact
(fact 10)
(map fact (quote (2 3 4)))
(transcript-off)
(*symbols*)
(exit)
