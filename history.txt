(set! f2 10.000000)
(define (assert x) (if (not x) (begin (display "assertion failed") (newline) (set! failures (1+ failures)))) x)
(assert (eq? s1 s1))
(assert (not (eq? s1 s2)))
(assert (eqv? s1 s2))
(assert (equal? s1 s2))
(assert (not (eq? n1 n2)))
(assert (eqv? n1 n2))
(assert (equal? n1 n2))
(assert (equal? (string->symbol (symbol->string (quote a))) (quote a)))
(assert (symbol? (gensym)))
(gc)
(exit)
(gc)
(exit)
(print (quote (a b c)))
(load "./tests/escheme_test_suite.scm")
(perform-timed-run 1)
(perform-timed-run 20)
(perform-timed-run 100)
(gc)
(load "./tests/escheme_test_suite.scm")
(perform-timed-run 20)
(perform-timed-run 100)
(perform-timed-run 1000)
(load "./tests/escheme_test_suite.scm")
(perform-timed-run 1)
(perform-timed-run 100)
(perform-timed-run 500)
(perform-timed-run 1000)
(load "./tests/escheme_test_suite.scm")
(perform-timed-run 10)
(perform-timed-run 100)
(perform-timed-run 1000)
(load "./tests/escheme_test_suite.scm")
(perform-timed-run 10)
(perform-timed-run 50)
(perform-timed-run 100)
(load "./tests/escheme_test_suite.scm")
(perform-timed-run 100)
(perform-timed-run 1000)
(load "./tests/escheme_test_suite.scm")
(perform-timed-run 20)
(perform-timed-run 100)
(gc)
(exit)
(gc)
(load "./tests/escheme_test_suite.scm")
(perform-timed-run 10)
(perform-timed-run 100)
(perform-timed-run 500)
(gc)
(exit)
(load "./tests/escheme_test_suite.scm")
(perform-timed-run 50)
(perform-timed-run 100)
(perform-timed-run 500)
(load "./tests/escheme_test_suite.scm")
(perform-timed-run 10)
(perform-timed-run 100)
(load "./tests/escheme_test_suite.scm")
(perform-timed-run 1)
(perform-timed-run 100)
(load "./tests/escheme_test_suite.scm")
(perform-timed-run 1)
(perform-timed-run 10)
(perform-timed-run 100)
#()
(gc)
null-string?
string-null?
(string-null? "a")
(string-null? "")
(gc)
""
(string-null? "")
(gc)
(load "./tests/escheme_test_suite.scm")
(perform-timed-run 1)
(perform-timed-run 50)
(perform-timed-run 100)
(perform-timed-run 1000)
*symbol-table*
(exit)
(load "./tests/escheme_test_suite.scm")
(repeat dotest 1)
(perform-timed-run 1)
(perform-timed-run 10)
(perform-timed-run 500)
(exit)
(load "./tests/escheme_test_suite.scm")
(repeat dotest 1)
(repeat dotest 100)
(perform-timed-run 1)
(perform-timed-run 100)
(perform-timed-run 1000)
(perform-timed-run 2000)
(perform-timed-run 4000)
(gc)
(exit)
